package com.bike.controller;

import java.io.IOException;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.List;

import javax.servlet.RequestDispatcher;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import com.bike.biz.BikeBizImpl;
import com.bike.dto.BIKE;

@WebServlet("/BikeServlet")
public class BikeServlet extends HttpServlet {
	private static final long serialVersionUID = 1L;

	BikeBizImpl biz = new BikeBizImpl();

	public BikeServlet() {
		super();
	}

	protected void doGet(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {
		request.setCharacterEncoding("utf-8");
		response.setContentType("text/html; charset=utf-8");

		doPost(request, response);
	}

	private void dispatch(String url, HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {
		RequestDispatcher dispatch = request.getRequestDispatcher(url);
		dispatch.forward(request, response);
	}

	private void jsResponse(String msg, String url, HttpServletResponse response) throws IOException {
		PrintWriter out = response.getWriter();
		out.println("<script>");
		out.println("alert('" + msg + "')");
		out.println("location.href='" + url + "'");
		out.println("</script>");
	}

	protected void doPost(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {
		request.setCharacterEncoding("utf-8");
		response.setContentType("text/html; charset=utf-8");

		String command = request.getParameter("command");

		if (command.equals("first")) {

			response.sendRedirect("bike01.jsp");

		} else if (command.equals("firstdb")) {

			String[] bikes = request.getParameterValues("bike");
			List<BIKE> list = new ArrayList<BIKE>();

			for (int i = 0; i < bikes.length; i++) {
				String[] bikeRow = bikes[i].split("/");
				BIKE bike = new BIKE();

				bike.setADDR_GU(bikeRow[0]);
				bike.setCONTENT_ID(Integer.parseInt(bikeRow[1]));
				bike.setCONTENT_NM(bikeRow[2]);
				bike.setNEW_ADDR(bikeRow[3]);
				bike.setCRADLE_COUNT(Integer.parseInt(bikeRow[4]));
				bike.setLONGITUDE(Double.parseDouble(bikeRow[5]));
				bike.setLATITUDE(Double.parseDouble(bikeRow[6]));

				list.add(bike);
			}

			int res = biz.multiInsert(list);

			if (res > 0) {
				jsResponse("db 저장 성공! " + res + " rows inserted!!", "index.html", response);
			} else if (res == -1) {
				jsResponse("table을 다 비우지 못했습니다 ㅜ", url, response);
			} else {
				jsResponse("db 저장 실패 ㅜㅜ", "bike.do?command=first", response);
			}
			
		} else if (command.equals("second")) {

			response.sendRedirect("bike02.jsp");
		}
	}

}
